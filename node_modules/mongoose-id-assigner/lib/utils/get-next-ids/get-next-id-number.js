"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const index_1 = require("../index");
function getNextIdNumber(field, idAssigner, fieldConfig, discriminatorName = '', retries = 1, getOnly = false) {
    return __awaiter(this, void 0, void 0, function* () {
        const nextId = fieldConfig.nextId;
        if (getOnly) {
            return nextId;
        }
        let afterNextId = fieldConfig.nextId;
        if (fieldConfig.nextIdFunction) {
            afterNextId = fieldConfig.nextIdFunction(nextId, fieldConfig.incrementBy);
        }
        else {
            afterNextId = nextId + (fieldConfig.incrementBy ? fieldConfig.incrementBy : 1);
        }
        try {
            const updateField = discriminatorName
                ? `discriminators.${discriminatorName}.${field}.nextId`
                : `fields.${field}.nextId`;
            const update = yield idAssigner.collection.findOneAndUpdate({
                modelName: idAssigner.modelName,
                [updateField]: nextId,
            }, {
                $set: { [updateField]: afterNextId },
                $currentDate: { timestamp: true },
            }, { projection: { value: 1 } });
            if (update.ok && !update.value && retries < idAssigner.retryTime) {
                const multiplier = Math.abs(Math.random() * retries);
                yield index_1.waitPromise(idAssigner.retryMillis * multiplier);
                yield idAssigner.refreshOptions();
                return getNextIdNumber(field, idAssigner, fieldConfig, discriminatorName, ++retries);
            }
            else if (!update.value && retries > idAssigner.retryTime) {
                return Promise.reject(index_1.PluginError(`Maximum retryTime to set value attained!`, idAssigner.modelName, field));
            }
        }
        catch (e) {
            return Promise.reject(e);
        }
        return nextId;
    });
}
exports.getNextIdNumber = getNextIdNumber;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LW5leHQtaWQtbnVtYmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL2dldC1uZXh0LWlkcy9nZXQtbmV4dC1pZC1udW1iZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFFQSxvQ0FBb0Q7QUFFcEQsU0FBc0IsZUFBZSxDQUNuQyxLQUFhLEVBQ2IsVUFBOEIsRUFDOUIsV0FBOEIsRUFDOUIsaUJBQWlCLEdBQUcsRUFBRSxFQUN0QixPQUFPLEdBQUcsQ0FBQyxFQUNYLE9BQU8sR0FBRyxLQUFLOztRQUVmLE1BQU0sTUFBTSxHQUFHLFdBQVcsQ0FBQyxNQUFNLENBQUM7UUFFbEMsSUFBSSxPQUFPLEVBQUU7WUFDWCxPQUFPLE1BQU0sQ0FBQztTQUNmO1FBRUQsSUFBSSxXQUFXLEdBQUcsV0FBVyxDQUFDLE1BQU0sQ0FBQztRQUVyQyxJQUFJLFdBQVcsQ0FBQyxjQUFjLEVBQUU7WUFDOUIsV0FBVyxHQUFHLFdBQVcsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQztTQUMzRTthQUFNO1lBQ0wsV0FBVyxHQUFHLE1BQU0sR0FBRyxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ2hGO1FBRUQsSUFBSTtZQUNGLE1BQU0sV0FBVyxHQUFHLGlCQUFpQjtnQkFDbkMsQ0FBQyxDQUFDLGtCQUFrQixpQkFBaUIsSUFBSSxLQUFLLFNBQVM7Z0JBQ3ZELENBQUMsQ0FBQyxVQUFVLEtBQUssU0FBUyxDQUFDO1lBQzdCLE1BQU0sTUFBTSxHQUFHLE1BQU0sVUFBVSxDQUFDLFVBQVUsQ0FBQyxnQkFBZ0IsQ0FDekQ7Z0JBQ0UsU0FBUyxFQUFFLFVBQVUsQ0FBQyxTQUFTO2dCQUMvQixDQUFDLFdBQVcsQ0FBQyxFQUFFLE1BQU07YUFDdEIsRUFDRDtnQkFDRSxJQUFJLEVBQUUsRUFBRSxDQUFDLFdBQVcsQ0FBQyxFQUFFLFdBQVcsRUFBRTtnQkFDcEMsWUFBWSxFQUFFLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRTthQUNsQyxFQUNELEVBQUUsVUFBVSxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQzdCLENBQUM7WUFFRixJQUFJLE1BQU0sQ0FBQyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxJQUFJLE9BQU8sR0FBRyxVQUFVLENBQUMsU0FBUyxFQUFFO2dCQUNoRSxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxPQUFPLENBQUMsQ0FBQztnQkFDckQsTUFBTSxtQkFBVyxDQUFDLFVBQVUsQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFDLENBQUM7Z0JBQ3ZELE1BQU0sVUFBVSxDQUFDLGNBQWMsRUFBRSxDQUFDO2dCQUNsQyxPQUFPLGVBQWUsQ0FBQyxLQUFLLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxpQkFBaUIsRUFBRSxFQUFFLE9BQU8sQ0FBQyxDQUFDO2FBQ3RGO2lCQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxJQUFJLE9BQU8sR0FBRyxVQUFVLENBQUMsU0FBUyxFQUFFO2dCQUMxRCxPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQ25CLG1CQUFXLENBQUMsMENBQTBDLEVBQUUsVUFBVSxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FDckYsQ0FBQzthQUNIO1NBQ0Y7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUNWLE9BQU8sT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUMxQjtRQUVELE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7Q0FBQTtBQXJERCwwQ0FxREMifQ==