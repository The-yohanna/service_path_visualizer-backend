import { Document, Model, Schema } from 'mongoose';
import { MongooseIdAssigner } from './MongooseIdAssigner';
export interface SchemaState {
    modelName: string;
    readyState: number;
    model?: Model<Document>;
    error?: Error;
    idAssigner: MongooseIdAssigner;
}
export declare class LocalStateStore {
    private static _instance;
    private collName;
    private stateMap;
    constructor();
    getState(schema: Schema): SchemaState | undefined;
    setState(schema: Schema, state: SchemaState): void;
    getIdAssigner(schema: Schema): MongooseIdAssigner;
    clear(): void;
    /**
     * Get the Collection name for all idAssigners
     * @return {string}
     */
    getCollName(): string;
    /**
     * Can only be called on at app bootstrap, that is before any IA initialises
     * Well the functionality comes as setting a different collName will make ids
     * inconsistent for mongoose connection instances
     * @param {string} collName
     */
    setCollName(collName: string): void;
}
export declare const localStateStore: LocalStateStore;
