"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("./utils");
class LocalStateStore {
    constructor() {
        this.collName = 'id_assigner';
        this.stateMap = new Map();
        LocalStateStore._instance = this;
    }
    getState(schema) {
        return this.stateMap.get(schema);
    }
    setState(schema, state) {
        const preState = this.stateMap.get(schema);
        if (!preState) {
            this.stateMap.set(schema, state);
            state.idAssigner.emit('unready');
        }
        else {
            this.stateMap.set(schema, state);
            if (state.readyState !== preState.readyState) {
                if (state.readyState === 2) {
                    state.idAssigner.emit('init');
                }
                if (state.readyState === 1) {
                    state.idAssigner.emit('ready');
                }
                if (state.readyState === 0) {
                    state.idAssigner.emit('unready');
                }
                if (state.readyState === -1) {
                    state.idAssigner.emit('error');
                }
            }
        }
    }
    getIdAssigner(schema) {
        const state = this.getState(schema);
        if (!state) {
            throw utils_1.PluginError(`schema's state not found in store.`);
        }
        return state.idAssigner;
    }
    clear() {
        this.stateMap.clear();
    }
    /**
     * Get the Collection name for all idAssigners
     * @return {string}
     */
    getCollName() {
        return this.collName;
    }
    /**
     * Can only be called on at app bootstrap, that is before any IA initialises
     * Well the functionality comes as setting a different collName will make ids
     * inconsistent for mongoose connection instances
     * @param {string} collName
     */
    setCollName(collName) {
        for (const config of this.stateMap.values()) {
            if (config.readyState === 1 || config.readyState === 2) {
                throw utils_1.PluginError('Could not Set CollName as Some Assigners have initialised, Call setCollName at app bootstrap level.');
            }
        }
        this.collName = collName;
    }
}
exports.LocalStateStore = LocalStateStore;
exports.localStateStore = new LocalStateStore();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9jYWxTdGF0ZVN0b3JlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0xvY2FsU3RhdGVTdG9yZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLG1DQUFzQztBQVV0QyxNQUFhLGVBQWU7SUFRMUI7UUFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLGFBQWEsQ0FBQztRQUM5QixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksR0FBRyxFQUF1QixDQUFDO1FBRS9DLGVBQWUsQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO0lBQ25DLENBQUM7SUFFRCxRQUFRLENBQUMsTUFBYztRQUNyQixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRCxRQUFRLENBQUMsTUFBYyxFQUFFLEtBQWtCO1FBQ3pDLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzNDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDYixJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDakMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7U0FDbEM7YUFBTTtZQUNMLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztZQUNqQyxJQUFJLEtBQUssQ0FBQyxVQUFVLEtBQUssUUFBUSxDQUFDLFVBQVUsRUFBRTtnQkFDNUMsSUFBSSxLQUFLLENBQUMsVUFBVSxLQUFLLENBQUMsRUFBRTtvQkFDMUIsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7aUJBQy9CO2dCQUNELElBQUksS0FBSyxDQUFDLFVBQVUsS0FBSyxDQUFDLEVBQUU7b0JBQzFCLEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2lCQUNoQztnQkFDRCxJQUFJLEtBQUssQ0FBQyxVQUFVLEtBQUssQ0FBQyxFQUFFO29CQUMxQixLQUFLLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztpQkFDbEM7Z0JBQ0QsSUFBSSxLQUFLLENBQUMsVUFBVSxLQUFLLENBQUMsQ0FBQyxFQUFFO29CQUMzQixLQUFLLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztpQkFDaEM7YUFDRjtTQUNGO0lBQ0gsQ0FBQztJQUVELGFBQWEsQ0FBQyxNQUFjO1FBQzFCLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7UUFFcEMsSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNWLE1BQU0sbUJBQVcsQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO1NBQ3pEO1FBRUQsT0FBTyxLQUFLLENBQUMsVUFBVSxDQUFDO0lBQzFCLENBQUM7SUFFRCxLQUFLO1FBQ0gsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsV0FBVztRQUNULE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSCxXQUFXLENBQUMsUUFBZ0I7UUFDMUIsS0FBSyxNQUFNLE1BQU0sSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxFQUFFO1lBQzNDLElBQUksTUFBTSxDQUFDLFVBQVUsS0FBSyxDQUFDLElBQUksTUFBTSxDQUFDLFVBQVUsS0FBSyxDQUFDLEVBQUU7Z0JBQ3RELE1BQU0sbUJBQVcsQ0FDZixxR0FBcUcsQ0FDdEcsQ0FBQzthQUNIO1NBQ0Y7UUFDRCxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztJQUMzQixDQUFDO0NBQ0Y7QUFqRkQsMENBaUZDO0FBRVksUUFBQSxlQUFlLEdBQW9CLElBQUksZUFBZSxFQUFFLENBQUMifQ==